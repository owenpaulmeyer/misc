zZ = \f.(\x.f (\z. x x z)) (\x.f (\z. x x z));
zero  = \f.\x.x;
one   = \f.\x.f x;
two   = \f.\x.f (f x);
three = \f.\x.f (f (f x));
four  = \f.\x.f (f (f (f x)));
five  = \f.\x.f (f (f (f (f x))));
tr = \a.\b.a;
fl = \a.\b.b;
iF = \p.\a.\b.p a b;
oR  = \p.\q.p p q;
anD = \p.\q.p q p;
noT = \m.\a.\b.m b a;
pr   = \x.\y.\p.p x y;
cons = pr;
car  = \p.p tr;
cdr  = \p.p fl;
nil  = \x.tr;
nul  = \p.p (\x.\y.fl);
frst = \p.p tr;
scnd = \p.p fl;
sucs  = \n.\f.\x.f (n f x);
prdc  = \n.\f.\x.n (\g.\h.h (g f)) (\u.x) (\u.u);
isZr = \n.n (\x.fl) tr;
subt = \m.\n.n prdc m;
plus = \m.\n.\f.\x.m f (n f x);
mult = \m.\n.\f.m (n f);
exp  = \m.\n.n m;
lte  = \m.\n.isZr (subt m n);
eq   = \m.\n.anD (lte m n) (lte n m);
gt   = \m.\n.noT (lte m n);
lt   = \m.\n.anD (lte m n) (noT (eq m n));
cas  = \i.\cs.zZ cs i cs;
cs   = \f.\i.\p.(eq (frst (car p)) i) (scnd (car p)) (f i (cdr p));
casE = zZ (\f.\i.\ps.(eq (frst (car ps)) i) (scnd (car ps)) (f i (cdr ps)));
appnd  = zZ (\g.\a.\b.nul a b (pr (car a) (g (cdr a) b)));
len  = zZ (\g.\c.\x.nul x c (g (sucs c) (cdr x))) zero;
idx  = \x.\i. car (i cdr x);
last = zZ (\g.\x.nul x nil (nul (cdr x) (car x) (g (cdr x))));
rvrs  = zZ (\g.\a.\l.nul l a (g (pr (car l) a) (cdr l))) nil;
fold = \f.\e.\x.zZ (\g.\y.nul y e (f (car y) (g (cdr y)))) x;
ins    = zZ (\f.\a.\as.iF (oR (nul as) (lte a (car as))) (pr a as) (pr (car as) (f a (cdr as))));
insort = zZ (\f.\as.\bs.(nul as) bs (f (cdr as) (ins (car as) bs)));
insert = \l.fold ins nil l;
lis = cons three (cons two nil);
m = cons two (cons one nil);

